name: Check and Send Message 
on:
  workflow_dispatch:
  schedule:
    - cron:  '00 21 * * *'
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch release version
        run: |
          all_repos=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$GITHUB_API_URL/users/$GITHUB_ACTOR/starred?per_page=100" | jq -r '.[]["full_name"]')
          echo '======Generated by Github Actions======' > release
          for each_repo in ${all_repos}; do latest=$(curl -s "https://github.com/${each_repo}/releases.atom" | grep -o "https://github.com/${each_repo}/releases/tag/.*\"" | head -n 1 | tr -d \"); [ -z "$latest" ] || echo "${latest}" >> release; done
          sed -i 's/\r//g' release
      - name: Check for modified files
        id: git-check
        run: |
          modified=$([ -z "$(git status --porcelain)" ] && echo "false" || echo "true")
          echo "modified=${modified}" >> $GITHUB_OUTPUT
          for each_new in $(git diff | grep '^+.*releases'); do 
            curl -X POST \
              -H 'Content-Type: application/json' \
              -d '{"chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}", "text": "'${each_new}'", "disable_web_page_preview": true }' \
              -s https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage
          done
      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --local user.email 50695187+tr1s7an@users.noreply.github.com
          git config --local user.name tr1s7an
          git add .
          git commit -m "New release version"
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
